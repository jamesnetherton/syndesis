- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-alertmanager
    name: syndesis-alertmanager-config
  data:
    config.yml: |-
      global:
        resolve_timeout: 5m
      route:
        group_by: ['job']
        group_wait: 30s
        group_interval: 1m
        receiver: 'webhook'
      receivers:
        - name: 'webhook'
          webhook_configs:
            - url: 'http://alert-webhook-logger:9876/'
- apiVersion: v1
  kind: Service
  metadata:
    name: syndesis-alertmanager
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-alertmanager
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9093
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-alertmanager
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: syndesis-alertmanager
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-alertmanager
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PROMETHEUS_VOLUME_CAPACITY}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: syndesis-alertmanager
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-alertmanager
  spec:
    replicas: 1
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-alertmanager
    strategy:
      type: Recreate
      resources:
        limits:
          memory: "256Mi"
        requests:
          memory: "20Mi"
    template:
      metadata:
        labels:
          app: syndesis
          syndesis.io/app: syndesis
          syndesis.io/type: infrastructure
          syndesis.io/component: syndesis-alertmanager
      spec:
        containers:
        - name: alertmanager
{{^WithDockerImages}}
          image: ' '
{{/WithDockerImages}}{{#WithDockerImages}}
          image: ${SYNDESIS_REGISTRY}/{{ Images.PrometheusImagePrefix }}/{{ Images.Support.AlertManager }}:{{ Tags.AlertManager }}
{{/WithDockerImages}}
          imagePullPolicy: IfNotPresent
          args:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/etc/alertmanager/data'
            - '--data.retention=168h'
          livenessProbe:
            httpGet:
              port: 9093
            initialDelaySeconds: 60
          ports:
          - containerPort: 9093
          readinessProbe:
            httpGet:
              port: 9093
            initialDelaySeconds: 30
          # DB QoS class is "Guaranteed" (requests == limits)
          # Note: On OSO there is no Guaranteed class, its always burstable
          resources:
            limits:
              memory: ${PROMETHEUS_MEMORY_LIMIT}
            requests:
              memory: ${PROMETHEUS_MEMORY_LIMIT}
          volumeMounts:
          - name: syndesis-alertmanager-data
            mountPath: /etc/alertmanager/data
          - name: syndesis-alertmanager-config
            mountPath: /etc/alertmanager
        volumes:
        - name: syndesis-alertmanager-data
          persistentVolumeClaim:
            claimName: syndesis-alertmanager
        - name: syndesis-alertmanager-config
          configMap:
            name: syndesis-alertmanager-config
    triggers:
{{^WithDockerImages}}
    - imageChangeParams:
        automatic: true
        containerNames:
        - alertmanager
        from:
          kind: ImageStreamTag
          name: {{ Images.Support.AlertManager }}:{{ Tags.AlertManager }}
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
{{/WithDockerImages}}
    - type: ConfigChange
